basePath: /
definitions:
  api.GetLogFilesResponse:
    properties:
      files:
        items:
          type: string
        type: array
    type: object
  api.HostInfo:
    properties:
      api_key:
        type: string
      host_name:
        type: string
    required:
    - api_key
    - host_name
    type: object
  api.RemoteLogRequest:
    properties:
      file:
        type: string
      filter:
        type: string
      hosts:
        items:
          $ref: '#/definitions/api.HostInfo'
        type: array
      "n":
        type: integer
    required:
    - file
    - hosts
    type: object
  api.RemoteLogResponse:
    properties:
      logs:
        items:
          type: string
        type: array
      status:
        type: string
      status_code:
        type: integer
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for pulling log files.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Log Puller Service API
  version: "1.0"
paths:
  /health:
    get:
      description: Returns the status of the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check endpoint
      tags:
      - health
  /v1/log:
    get:
      description: Reads the last N lines from a log file and returns them as a JSON
        array
      parameters:
      - description: Log file
        in: query
        name: file
        required: true
        type: string
      - description: Number of lines
        in: query
        name: "n"
        required: true
        type: integer
      - description: Filter
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad 'filter' parameter
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Read log file
      tags:
      - logs
  /v1/logs:
    get:
      description: Returns a list of log files in a directory
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetLogFilesResponse'
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get log files
      tags:
      - logs
  /v1/remotelog:
    post:
      consumes:
      - application/json
      description: Reads the last N lines from a log file on a remote host and returns
        them as a JSON array
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.RemoteLogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/api.RemoteLogResponse'
            type: object
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Read remote log file
      tags:
      - logs
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
